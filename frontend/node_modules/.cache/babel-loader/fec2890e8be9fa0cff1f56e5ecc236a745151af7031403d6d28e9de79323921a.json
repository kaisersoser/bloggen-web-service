{"ast":null,"code":"var _jsxFileName = \"/home/vogtcha/Jupyter/Projects/CrewAI/bloggen-web-service/frontend/src/App.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport BlogForm from './components/BlogForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [blogContent, setBlogContent] = useState(null);\n  const handleBlogGeneration = async topic => {\n    try {\n      const response = await fetch('http://localhost:5000/api/generate-blog', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          topic\n        })\n      });\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      const data = await response.json();\n      setBlogContent(data.blogContent);\n    } catch (error) {\n      console.error('Error generating blog:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Blog Generator\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(BlogForm, {\n      onGenerate: handleBlogGeneration\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), blogContent && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Generated Blog\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: blogContent\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"Nd3Ty0GtKE+euifetWcZJ7D9WOI=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","BlogForm","jsxDEV","_jsxDEV","App","_s","blogContent","setBlogContent","handleBlogGeneration","topic","response","fetch","method","headers","body","JSON","stringify","ok","Error","data","json","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","onGenerate","_c","$RefreshReg$"],"sources":["/home/vogtcha/Jupyter/Projects/CrewAI/bloggen-web-service/frontend/src/App.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport BlogForm from './components/BlogForm';\n\nfunction App() {\n    const [blogContent, setBlogContent] = useState(null);\n\n    const handleBlogGeneration = async (topic) => {\n        try {\n            const response = await fetch('http://localhost:5000/api/generate-blog', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify({ topic }),\n            });\n\n            if (!response.ok) {\n                throw new Error('Network response was not ok');\n            }\n\n            const data = await response.json();\n            setBlogContent(data.blogContent);\n        } catch (error) {\n            console.error('Error generating blog:', error);\n        }\n    };\n\n    return (\n        <div>\n            <h1>Blog Generator</h1>\n            <BlogForm onGenerate={handleBlogGeneration} />\n            {blogContent && (\n                <div>\n                    <h2>Generated Blog</h2>\n                    <div>{blogContent}</div>\n                </div>\n            )}\n        </div>\n    );\n}\n\nexport default App;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,QAAQ,MAAM,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7C,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACX,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EAEpD,MAAMQ,oBAAoB,GAAG,MAAOC,KAAK,IAAK;IAC1C,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,yCAAyC,EAAE;QACpEC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACL,cAAc,EAAE;QACpB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAEP;QAAM,CAAC;MAClC,CAAC,CAAC;MAEF,IAAI,CAACC,QAAQ,CAACO,EAAE,EAAE;QACd,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;MAClD;MAEA,MAAMC,IAAI,GAAG,MAAMT,QAAQ,CAACU,IAAI,CAAC,CAAC;MAClCb,cAAc,CAACY,IAAI,CAACb,WAAW,CAAC;IACpC,CAAC,CAAC,OAAOe,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;IAClD;EACJ,CAAC;EAED,oBACIlB,OAAA;IAAAoB,QAAA,gBACIpB,OAAA;MAAAoB,QAAA,EAAI;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACvBxB,OAAA,CAACF,QAAQ;MAAC2B,UAAU,EAAEpB;IAAqB;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EAC7CrB,WAAW,iBACRH,OAAA;MAAAoB,QAAA,gBACIpB,OAAA;QAAAoB,QAAA,EAAI;MAAc;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACvBxB,OAAA;QAAAoB,QAAA,EAAMjB;MAAW;QAAAkB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvB,CACR;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEd;AAACtB,EAAA,CApCQD,GAAG;AAAAyB,EAAA,GAAHzB,GAAG;AAsCZ,eAAeA,GAAG;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}